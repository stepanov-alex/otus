server {
    listen 80;
    server_name wordpress.loc;
    return 301 https://wordpress.loc$request_uri;
}
server {
    listen 80;
    server_name mon.loc;
    return 301 https://mon.loc$request_uri;
}
server {
    listen 80;
    server_name loki.loc;
    return 301 https://loki.loc$request_uri;
}
server {
  #  listen       80;
    listen       443 ssl;
    server_name  wordpress.loc;

   # ssl_client_certificate /etc/pki/nginx/ca.crt;
   # ssl_verify_client      optional;
    ssl_certificate         "/etc/pki/nginx/wordpress/wordpress.crt";
    ssl_certificate_key     "/etc/pki/nginx/wordpress/wordpress.key";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_ciphers PROFILE=SYSTEM;
    ssl_prefer_server_ciphers on;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;


    location / {
      proxy_pass https://wordpress.loc/;
      proxy_http_version                 1.1;
      proxy_cache_bypass                 $http_upgrade;


      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        "upgrade";
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Port  $server_port;
  }
}

server {
    listen       443 ssl;
    server_name  mon.loc;
    ssl_certificate         "/etc/pki/nginx/mon/mon.crt";
    ssl_certificate_key     "/etc/pki/nginx/mon/mon.key";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_ciphers PROFILE=SYSTEM;
    ssl_prefer_server_ciphers on;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;

    location / {
      proxy_pass http://zabbix.loc/;
      proxy_http_version  1.1;
      proxy_cache_bypass  $http_upgrade;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        "upgrade";
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Port  $server_port;
  }
}
server {
    listen       443 ssl;
    server_name  loki.loc;
    ssl_certificate         "/etc/pki/nginx/loki/loki.crt";
    ssl_certificate_key     "/etc/pki/nginx/loki/loki.key";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_ciphers PROFILE=SYSTEM;
    ssl_prefer_server_ciphers on;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;

    location / {
      proxy_pass http://loki.loc:3000/;
      proxy_http_version  1.1;
      proxy_cache_bypass  $http_upgrade;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        "upgrade";
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Port  $server_port;
  }
}
server {
    listen       80;
    server_name  proxy.loc;
    location / {
      proxy_pass http://localhost:9080/;
      proxy_http_version  1.1;
      proxy_cache_bypass  $http_upgrade;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        "upgrade";
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Port  $server_port;
  }
}
