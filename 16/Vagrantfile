# -*- mode: ruby -*-
# vi: set ft=ruby :

file_to_disk = './large_disk.vdi'
needsController = false
Vagrant.configure("2") do |config|
  # Base VM OS configuration.
  config.vm.box = "centos/7"
  config.vm.box_version = "2004.01"
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end
  config.vm.synced_folder ".", "/vagrant", disabled: true


  config.vm.provider :virtualbox do |v|
    v.memory = 512
    v.cpus = 1
    v.check_guest_additions = false
  end

  config.vm.define "backup" do |backup|
    backup.vm.hostname = 'backup'
    backup.vm.network :private_network, ip: "192.168.11.160"
    backup.vm.provider :virtualbox do |vb|
      unless File.exist?(file_to_disk)
     	 vb.customize ['createhd', '--filename', file_to_disk, '--variant', 'Fixed', '--size', 2 * 1024]
       vb.customize ["storagectl", :id, "--name", "SataController", "--add", "sata" ]
	 	 needsController = true
      end
      if needsController = true
       vb.customize ['storageattach', :id,  '--storagectl', 'SataController', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]
      end
     end
  end

  config.vm.define "client" do |client|
    client.vm.hostname = 'client'
    client.vm.network :private_network, ip: "192.168.11.150"
  end
  
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "playbook.yml"
    ansible.become = "true"
  end

end
